plugins {
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'signing'
    id 'ru.vyarus.java-lib' version '2.2.0'
    id 'ru.vyarus.github-info' version '1.2.0'
    id 'ru.vyarus.quality' version '4.6.0'
    id 'net.researchgate.release' version '2.8.1'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'ru.vyarus.mkdocs' version '1.1.0'
}

sourceCompatibility = 1.8

wrapper {
    gradleVersion = '6.9'
}

ext {
    orient = '3.0.38'
    guice = '5.0.1'
}

repositories { mavenLocal(); mavenCentral() }
dependencies {
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.2.3'

    compile 'org.slf4j:slf4j-api:1.7.25'

    compile 'ru.vyarus:generics-resolver:3.0.3'
    compile 'ru.vyarus:guice-ext-annotations:1.3.0'
    compile 'org.javassist:javassist:3.23.1-GA'
    compile "com.google.inject:guice:$guice"
    compile "com.google.inject.extensions:guice-persist:$guice"
    compile "com.orientechnologies:orientdb-core:$orient"
    provided "com.orientechnologies:orientdb-object:$orient"
    provided ("com.orientechnologies:orientdb-graphdb:$orient")
    provided ("com.orientechnologies:orientdb-lucene:$orient")

    testCompile 'ch.qos.logback:logback-classic:1.2.3'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.25'
    testCompile 'org.spockframework:spock-guice:1.2-groovy-2.5'
    testCompile 'ru.vyarus:guice-validator:1.2.0'
    testCompile 'org.hibernate:hibernate-validator:5.2.0.Final'
    testCompile 'org.glassfish.web:javax.el:2.2.6'
    testCompile "com.orientechnologies:orientdb-tools:$orient"
}

group = 'ru.vyarus'
description = 'Guice integration for OrientDB'

github {
    user = 'xvik'
    license = 'MIT'
}

mkdocs.publish {
    docPath = '3.3.2'
    rootRedirect = true
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email 'vyarus@gmail.com'
        }
    }
}

javaLib {
    // java 9 auto module name
    autoModuleName = "ru.vyarus.guice.orient"
    // don't publish gradle metadata artifact
    withoutGradleMetadata()
    // use only direct dependencies in the generated pom, removing BOM mentions
    pom.removeDependencyManagement()
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

// Required signing properties for release: signing.keyId, signing.password and signing.secretKeyRingFile
// (https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials)

afterReleaseBuild {
    dependsOn = ['publishToSonatype',
                 'closeAndReleaseSonatypeStagingRepository']
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    //useJUnitPlatform()
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat 'full'
    }
    maxHeapSize = '512m'
}

dependencyUpdates.revision = 'release'
